	# –í–µ—Ä—Å–∏—è 1.6 (2025-07-09)
# ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω insert –≤ —Ç–∞–±–ª–∏—Ü—É pending_payments –ø–µ—Ä–µ–¥ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–º
# ‚úÖ –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å—Ç–∞–≤–∫–∏ –∏ –æ—à–∏–±–æ–∫ —á–µ—Ä–µ–∑ logging

import os
import uuid
import httpx
import psycopg2
import logging
from datetime import datetime
from fastapi import APIRouter
from fastapi.responses import RedirectResponse

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s | %(levelname)s | %(message)s"
)

router = APIRouter()

SQUARE_TOKEN = os.getenv("SQUARE_ACCESS_TOKEN")
SQUARE_LOCATION = os.getenv("SQUARE_LOCATION_ID")

DB_HOST = "172.18.0.2"
DB_NAME = "twiliogateway"
DB_USER = "twilio"
DB_PASS = os.getenv("POSTGRES_PASSWORD")

@router.get("/create_payment_link")
async def create_payment_link(amount: int, phone: str):
    async with httpx.AsyncClient() as client:
        response = await client.post(
            "https://connect.squareup.com/v2/online-checkout/payment-links",
            headers={
                "Authorization": f"Bearer {SQUARE_TOKEN}",
                "Content-Type": "application/json"
            },
            json={
                "idempotency_key": str(uuid.uuid4()),
                "quick_pay": {
                    "name": "Token Recharge",
                    "price_money": {
                        "amount": amount * 100,
                        "currency": "USD"
                    },
                    "location_id": SQUARE_LOCATION
                },
                "checkout_options": {
                    "redirect_url": "https://aianswerline.live"
                },
                "metadata": {
                    "phone": phone
                }
            }
        )
        data = response.json()
        url = data["payment_link"]["url"]

        # –õ–æ–≥ –ø–µ—Ä–µ–¥ –≤—Å—Ç–∞–≤–∫–æ–π
        logging.info(f"üìå –í—Å—Ç–∞–≤–∫–∞ –≤ pending_payments: phone={phone}, amount={amount}, url={url}")

        try:
            conn = psycopg2.connect(
                host=DB_HOST,
                dbname=DB_NAME,
                user=DB_USER,
                password=DB_PASS
            )
            cur = conn.cursor()
            cur.execute("""
                INSERT INTO pending_payments (phone, amount, created_at, payment_link)
                VALUES (%s, %s, %s, %s)
            """, (phone, amount, datetime.utcnow(), url))
            conn.commit()
            cur.close()
            conn.close()
            logging.info("‚úÖ –í—Å—Ç–∞–≤–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ.")
        except Exception as e:
            logging.error(f"‚ùå –û—à–∏–±–∫–∞ –≤—Å—Ç–∞–≤–∫–∏ –≤ pending_payments: {e}")

        return RedirectResponse(url)
