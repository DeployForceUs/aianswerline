# –í–µ—Ä—Å–∏—è 1.4 (2025-07-07)
# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env + –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Docker PostgreSQL + –≤—Å—Ç–∞–≤–∫–∞ –≤ email_otp

import psycopg2
from datetime import datetime
import os
from dotenv import load_dotenv

load_dotenv(dotenv_path="/opt/aianswerline/.env")

print("üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
for var in ["DB_NAME", "DB_USER", "DB_PASS", "DB_HOST", "DB_PORT"]:
    print(f"  üîπ {var} = {os.getenv(var)}")

if not all([os.getenv("DB_NAME"), os.getenv("DB_USER"), os.getenv("DB_PASS"), os.getenv("DB_HOST"), os.getenv("DB_PORT")]):
    print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–¥–∞–Ω—ã.")
    exit(1)

print("\nüîå –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
try:
    conn = psycopg2.connect(
        dbname=os.getenv("DB_NAME"),
        user=os.getenv("DB_USER"),
        password=os.getenv("DB_PASS"),
        host=os.getenv("DB_HOST"),
        port=os.getenv("DB_PORT")
    )
    print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ.")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    exit(1)

cur = conn.cursor()
email = "dimatest@failcase.com"
code = "999999"
expires = datetime.utcnow()

print("\nüì• –í—Å—Ç–∞–≤–∫–∞ –≤ —Ç–∞–±–ª–∏—Ü—É email_otp:")
print(f"  üî∏ Email:   {email}")
print(f"  üî∏ Code:    {code}")
print(f"  üî∏ Expires: {expires}")

try:
    cur.execute(
        "INSERT INTO email_otp (email, code, expires_at) VALUES (%s, %s, %s)",
        (email, code, expires)
    )
    conn.commit()
    print("‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—Å—Ç–∞–≤–ª–µ–Ω–æ!")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ: {e}")
finally:
    cur.close()
    conn.close()
